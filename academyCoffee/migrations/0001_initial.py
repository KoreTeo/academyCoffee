# Generated by Django 4.2.2 on 2023-06-20 08:26

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('region', models.TextField(blank=True, choices=[('Красноярск', 'Красноярск'), ('Москва', 'Москва'), ('Санкт-Петербург', 'Санкт-Петербург'), ('Новосибирск', 'Новосибирск')], max_length=50, verbose_name='Регион')),
                ('PNumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='RU', unique=True, verbose_name='Номер телефона')),
                ('DateOfBirth', models.DateField(default=django.utils.timezone.now, verbose_name='День рождения')),
                ('payment_method', models.CharField(default='Наличные', max_length=20, verbose_name='Способ оплаты')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailSubscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50, verbose_name='Почта')),
            ],
        ),
        migrations.CreateModel(
            name='OfferForCooperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=15, verbose_name='Имя')),
                ('region', models.TextField(blank=True, choices=[('Красноярск', 'Красноярск'), ('Москва', 'Москва'), ('Санкт-Петерург', 'Санкт-Петерург'), ('Новосибирск', 'Новосибирск')], max_length=50, verbose_name='Регион')),
                ('text', models.TextField()),
                ('email', models.EmailField(max_length=50, verbose_name='Почта')),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Промокод')),
                ('stock', models.PositiveSmallIntegerField(default=25)),
            ],
        ),
        migrations.CreateModel(
            name='UserCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_base', models.BooleanField(default=False)),
                ('number', models.DecimalField(decimal_places=0, max_digits=16)),
                ('month', models.DecimalField(decimal_places=0, max_digits=2)),
                ('year', models.DecimalField(decimal_places=0, max_digits=2)),
                ('CVCCode', models.DecimalField(decimal_places=0, max_digits=3)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('price', models.DecimalField(decimal_places=0, max_digits=7)),
                ('stars', models.DecimalField(decimal_places=1, max_digits=5)),
                ('image', models.ImageField(upload_to='products_images')),
                ('category', models.ManyToManyField(to='academyCoffee.productcategory')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basket_history', models.JSONField(default=dict)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.SmallIntegerField(choices=[(0, 'Обработка'), (1, 'Готовим'), (2, 'Можно забирать'), (3, 'Доставлен')], default=0)),
                ('serving', models.CharField(max_length=50, verbose_name='Сервировка')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('payment_method', models.CharField(max_length=20, verbose_name='Способ оплаты')),
                ('promocode_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Промокод')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=0)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academyCoffee.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
